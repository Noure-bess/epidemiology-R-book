---
title: "Fitting gradient models"
---
 
::: {.callout-note appearance="simple"}
This is a work in progress that is currently undergoing heavy technical editing and copy-editing
:::

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(ggthemes)
library(patchwork)
library(cowplot) # for themes 
theme_set(theme_bw(base_size = 16)) # set global theme
```

## Dataset

The hypothetical data below shows a gradient for the number of lesions counted at varying distances in meters from the source. Let's create two vectors, one for the distances $x$ and the other for the lesion count $Y$, and then a dataframe by combining the two vectors.

```{r}
# create the two vectors
x <- c(0.8, 1.6, 2.4, 3.2, 4, 7.2, 12, 15.2, 21.6, 28.8)
Y <- c(184.9, 113.3, 113.3, 64.1, 25, 8, 4.3, 2.5, 1, 0.8)
grad1 <- data.frame(x, Y) # create the dataframe
grad1 # show the gradient
```

## Visualize the gradient

```{r}
grad1 |> 
  ggplot(aes(x, Y))+
  geom_point()+
  geom_line()+
  labs(y = "Lesion count",
       x = "Distance (m)")
```

# Linear regression

A linear regression model is fitted to the transformed variables according to the model. The higher the coefficient of determination, the better is the fit of the model to the data.

Exponential model

```{r}
reg_exp <- lm(log(Y) ~ x, data = grad1)
summary(reg_exp)
```

Power law model with $C = 0$.

```{r}
reg_p <- lm(log(Y) ~ log(x), data = grad1)
summary(reg_p)
```

Power law model with $C = 0.4$.

```{r}
reg_pm <- lm(log(Y) ~ log(x + 0.4), data = grad1)
summary(reg_pm)
```

Graphs for the fitted models

Exponential

```{r}
grad1 |> 
  ggplot(aes(x, log(Y)))+
  geom_point()+
  geom_line()+
  geom_abline(slope = coef(reg_exp)[[2]], intercept = coef(reg_exp)[[1]])+
 labs(y = "Log of Lesion count",
       x = "Distance (m)")


```

Power law model

```{r}
grad1 |> 
  ggplot(aes(log(x), log(Y)))+
  geom_point()+
  geom_line()+
  geom_abline(slope = coef(reg_p)[[2]], intercept = coef(reg_p)[[1]])+
 labs(y = "Log of Lesion count",
       x = "Log of distance")

```

Modified power law model

```{r}
grad1 |> 
  ggplot(aes(log(x+0.4), log(Y)))+
  geom_point()+
  geom_line()+
  geom_abline(slope = coef(reg_pm)[[2]], intercept = coef(reg_pm)[[1]])+
 labs(y = "Log of Lesion count",
       x = "Log of distance (m)")

```

Conclusion: The modified power law model provided the best fit.
